.decl edge(id:number, x:number, y:number)
.input edge

.decl node(id:number)
.input node

.decl library_flow(edge:number, id:number)
.input library_flow

.decl   whynot_node_pairs(start:number, end:number)
.input whynot_node_pairs

.decl   library_node(node:number)
.input library_node

.decl path(x:number, y:number)
// .output path

.decl source(node:number)
.input source

.decl sink( node:number)
.input sink


.decl   library_flow_on_path(end:number, start:number, edge:number)
.output library_flow_on_path

.decl plausible_edge(id:number, start: number, end: number)
.input plausible_edge

.decl hypothetical_library_flow_from_node(node:number)
.output hypothetical_library_flow_from_node

.decl   hypothetical_library_flow_on_path(end:number, start:number, libnode:number)
.output hypothetical_library_flow_on_path


.decl plausible_path(start: number, end: number)
.output plausible_path


.decl   whynot_node_pairs_answer(libnode:number, num_occurences:number)
.output whynot_node_pairs_answer



path(x, y) :- edge(_, x, y).
path(x, y) :- path(x, z), edge(_, z, y).

plausible_path(x, y) :- plausible_edge(_, x, y).
plausible_path(x, y) :- plausible_path(x, z), plausible_edge(_, z, y).


library_flow_on_path(end, start, e) :- edge(e, a, b), library_flow(e, _), path(start, a), path(b, end).
library_flow_on_path(end, start, e) :- edge(e, start, b), library_flow(e, _), path(b, end).
library_flow_on_path(end, start, e) :- edge(e, a, end), library_flow(e, _), path(start, a).



hypothetical_library_flow_from_node(node) :- library_node(node), !edge(_, node, _).

hypothetical_library_flow_on_path(taintsink, taintsource, libnode) :- hypothetical_library_flow_from_node(libnode), source(taintsource), sink(taintsink), plausible_path(taintsource, libnode), plausible_path(libnode, taintsink).

// hypothetical_path(x, y) :- !path(x, y), hypothetical_library_flow_on_path(y, x, _), 

// path_through_hypothetical_subpath(x, start, end, y) :- path(x, start), hypothetical_path(start, end), plausible_path(end, y).

whynot_node_pairs_answer(libnode, num_occurences) :- hypothetical_library_flow_from_node(libnode), num_occurences = count : {hypothetical_library_flow_on_path(_, _, libnode)}.

