.decl edge(id:number, x:number, y:number)
.input edge

.decl node(id:number)
.input node

.decl library_flow(edge:number, id:number)
.input library_flow

.decl   whynot_node(node:number)
.input whynot_node

.decl   library_node(node:number)
.input library_node

.decl path(x:number, y:number)
.output path

.decl   library_flow_on_path(end:number, start:number, edge:number)
.output library_flow_on_path

.decl plausible_edge(id:number, start: number, end: number)
.input plausible_edge

.decl plausible_path(start: number, end: number)
.output plausible_path

.decl hypothetical_library_flow_from_node(node:number)
.output hypothetical_library_flow_from_node

.decl   hypothetical_library_flow_on_path(end:number, start:number, libnode:number)
.output hypothetical_library_flow_on_path


// node a is on the path x -> y, 
.decl nodes_on_path(query: number, a:number, steps: number)
.output nodes_on_path

.decl   whynot_node_answer(node:number, answer_plausible_edge :number)
.output whynot_node_answer


path(x, y) :- edge(_, x, y).
path(x, y) :- path(x, z), edge(_, z, y).

plausible_path(x, y) :- plausible_edge(_, x, y).
plausible_path(x, y) :- plausible_path(x, z), plausible_edge(_, z, y).

library_flow_on_path(end, start, e) :- edge(e, a, b), library_flow(e, _), path(start, a), path(b, end).
library_flow_on_path(end, start, e) :- edge(e, start, b), library_flow(e, _), path(b, end).
library_flow_on_path(end, start, e) :- edge(e, a, end), library_flow(e, _), path(start, a).


hypothetical_library_flow_from_node(node) :- library_node(node), !edge(_, node, _).
hypothetical_library_flow_on_path(end, start, libedge) :- hypothetical_library_flow_from_node(libnode), plausible_path(start, libnode), plausible_edge(libedge, libnode, end).

whynot_node_answer(node, libedge) :- whynot_node(node), hypothetical_library_flow_on_path(node, _, libedge).

nodes_on_path(query, start, 0) :- node(start), whynot_node_answer(query, answer_edge), edge(answer_edge, start, _).
nodes_on_path(query, x, steps + 1) :- nodes_on_path(query, a, steps), edge(_, a, x), path(x, target_node), why_node(target_node).


